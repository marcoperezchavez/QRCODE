{"version":3,"sources":["assets/pmfoxtechnologiesBanner.png","components/qrcomponent.jsx","components/formularioComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","QrComponent","props","_useState","useState","_useState2","_slicedToArray","qrs","setQrs","_useState3","_useState4","error","setError","size","mensaje","useEffect","url","concat","fetch","then","response","console","log","React","createElement","message","Fragment","src","alt","FormularioComponent","setMensaje","setSize","Container","Row","className","Form","Label","htmlFor","Control","id","aria-describedby","placeholder","onChange","event","target","value","DropdownButton","title","onSelect","Dropdown","Item","eventKey","Button","bg","onClick","ReturnDatos","App","logo","reportWebVitals","onPerfEntry","Function","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+OC0CzBC,SAxCK,SAACC,GAAU,IAAAC,EAILC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA3BI,EAAGF,EAAA,GAAEG,EAAMH,EAAA,GAAAI,EACQL,mBAAS,MAAKM,EAAAJ,YAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAChBG,EAAOX,EAAMW,KACbC,EAAUZ,EAAMY,QAqB1B,OAjBAC,oBAAU,WAEN,IAAMC,EAAG,iDAAAC,OAAmDJ,EAAI,KAAAI,OAAIJ,EAAI,SAAAI,OAAQH,GAChFI,MAAMF,GACFG,KAAK,SAAAC,GACFC,QAAQC,IAAI,mBAAqBF,GAEjCC,QAAQC,IAAI,cAAeF,EAASJ,KACpCR,EAAOY,EAASJ,MAGpB,SAACL,GACAC,EAASD,MAGd,CAACE,EAAKC,IAENH,EACQY,IAAAC,cAAA,WAAK,UAAQb,EAAMc,SAGtBF,IAAAC,cAAAD,IAAAG,SAAA,KACIH,IAAAC,cAAA,OAAKG,IAAKpB,EAAKqB,IAAI,+DCiChBC,EA7Da,SAAC3B,GAAU,IAAAC,EAELC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAnCW,EAAOT,EAAA,GAAEyB,EAAUzB,EAAA,GAAAI,EACFL,mBAAS,OAAMM,EAAAJ,YAAAG,EAAA,GAAhCI,EAAIH,EAAA,GAAEqB,EAAOrB,EAAA,GAkBtB,OACEa,IAAAC,cAAAD,IAAAG,SAAA,KACAH,IAAAC,cAACQ,IAAS,KACVT,IAAAC,cAACS,IAAG,CAACC,UAAU,6BACfX,IAAAC,cAACW,IAAKC,MAAK,CAACC,QAAQ,cAAa,iCAC/Bd,IAAAC,cAACW,IAAKG,QAAO,CACXC,GAAG,aACHC,mBAAiB,oBACjBC,YAAY,qBACZC,SApBgB,SAACC,GACrBb,EAAWa,EAAMC,OAAOC,OACxBxB,QAAQC,IAAIR,OAqBZS,IAAAC,cAACS,IAAG,CAACC,UAAU,6BACfX,IAAAC,cAACW,IAAKC,MAAK,CAACC,QAAQ,aAAY,sCAGhCd,IAAAC,cAACsB,IAAc,CACbC,MAAK,GAAA9B,OAAMJ,EAAI,OAAAI,OAAMJ,GACrB0B,GAAG,4BACHS,SAxBe,SAACL,GAClBZ,EAAQY,IAwBNE,MAAOhC,GAGCU,IAAAC,cAACyB,IAASC,KAAI,CAACC,SAAW,OAAM,YAChC5B,IAAAC,cAACyB,IAASC,KAAI,CAACC,SAAW,OAAM,YAChC5B,IAAAC,cAACyB,IAASC,KAAI,CAACC,SAAW,OAAM,cAI1C5B,IAAAC,cAAA,WACAD,IAAAC,cAACS,IAAG,CAACC,UAAU,6BACfX,IAAAC,cAAC4B,IAAM,CAACC,GAAG,UAAWC,QAAS,WA9CjB,QAARzC,GACJX,EAAMqD,YAAY1C,EAAMC,KA6CwB,mBCxBvC0C,MA5Bf,WAAe,IAAArD,EAEWC,mBAAS,GAAEC,EAAAC,YAAAH,EAAA,GAA5BU,EAAIR,EAAA,GAAE0B,EAAO1B,EAAA,GAAAI,EACUL,mBAAS,GAAEM,EAAAJ,YAAAG,EAAA,GAAlCK,EAAOJ,EAAA,GAAEoB,EAAUpB,EAAA,GAO1B,OACEa,IAAAC,cAAA,OAAKU,UAAU,OACbX,IAAAC,cAAA,UAAQU,UAAU,cAChBX,IAAAC,cAAA,OAAKG,IAAK8B,IAAMvB,UAAU,WAAWN,IAAI,SACzCL,IAAAC,cAAA,WACAD,IAAAC,cAAA,WACEX,EAAO,GACPU,IAAAC,cAACvB,EAAW,CAACY,KAAQA,EAAMC,QAAWA,KAElC,qBAENS,IAAAC,cAACK,EAAmB,CAAC0B,YAhBT,SAAC1C,EAAKC,GACtBiB,EAAQlB,GACRiB,EAAWhB,SCFA4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC7D,EAAA8D,EAAA,GAAA1C,KAAApB,EAAA+D,KAAA,UAAqB3C,KAAK,SAAA4C,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHlD,IAAAC,cAACD,IAAMmD,WAAU,KACfnD,IAAAC,cAACgC,EAAG,QAORE","file":"static/js/main.0f70327d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pmfoxtechnologiesBanner.a2c861a5.png\";","import React, { useEffect, useState } from \"react\";\r\n\r\nconst QrComponent = (props) => {\r\n\r\n    \r\n\r\n    const [qrs, setQrs] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const size = props.size;\r\n    const mensaje = props.mensaje;\r\n\r\n\r\n\r\nuseEffect(()=>{\r\n    \r\n    const url =`https://chart.googleapis.com/chart?cht=qr&chs=${size}x${size}&chl=${mensaje}`   \r\n    fetch(url)\r\n       .then(response => {\r\n           console.log(\"el response es: \" , response)\r\n           \r\n           console.log(\"la data es:\" ,response.url)\r\n           setQrs(response.url)\r\n\r\n       } ,\r\n       (error) => { \r\n        setError(error);\r\n       }\r\n       )\r\n}, [size,mensaje])\r\n\r\nif(error){\r\n    return <div>Error: {error.message}</div>\r\n} else {\r\n    return(\r\n        <>\r\n            <img src={qrs} alt=\"QRImage\"></img>\r\n        </>\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default QrComponent;","import React, { useState } from \"react\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nconst FormularioComponent = (props) => {\r\n    \r\n    const [mensaje, setMensaje] = useState(\"\");\r\n    const [size, setSize] = useState(\"200\")\r\n\r\n    const readDatos = () => {\r\n      if (size != \"size\")\r\n      props.ReturnDatos(size, mensaje);\r\n  };\r\n\r\n  const handleMessage = (event) => {\r\n    setMensaje(event.target.value);\r\n    console.log(mensaje)\r\n\r\n  }\r\n\r\n  const handleSize = (event) =>{\r\n    setSize(event)\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n    <Container>\r\n    <Row className=\"justify-content-md-center\">\r\n    <Form.Label htmlFor=\"txtMensaje\"> Escribe el texto a convertir</Form.Label>\r\n      <Form.Control \r\n        id=\"txtMensaje\"\r\n        aria-describedby=\"passwordHelpBlock\"\r\n        placeholder=\"Escribe el mensaje\"\r\n        onChange = {handleMessage}\r\n      />\r\n    </Row>\r\n    <Row className=\"justify-content-md-center\">\r\n    <Form.Label htmlFor=\"txtTamano\"> Elige el tamano que quieres el QR</Form.Label>\r\n\r\n\r\n    <DropdownButton\r\n      title={ `${size} x ${size}`}\r\n      id=\"dropdown-menu-align-right\"\r\n      onSelect={handleSize}\r\n      value={size}\r\n      \r\n        >\r\n              <Dropdown.Item eventKey = \"200\">200x200 </Dropdown.Item>\r\n              <Dropdown.Item eventKey = \"300\">300X300 </Dropdown.Item>\r\n              <Dropdown.Item eventKey = \"500\">500x500 </Dropdown.Item>\r\n      </DropdownButton>\r\n\r\n    </Row>\r\n    <br></br>\r\n    <Row className=\"justify-content-md-center\">\r\n    <Button bg=\"primary\"  onClick={() => readDatos()}>\r\n        Click\r\n      </Button>\r\n    </Row>\r\n    </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormularioComponent;\r\n","import logo from './assets/pmfoxtechnologiesBanner.png';\nimport './App.css';\nimport QrComponent from './components/qrcomponent';\nimport FormularioComponent from './components/formularioComponent';\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n\n  const [size, setSize] = useState(0);\n  const [mensaje, setMensaje] = useState(0);\n\n  const ReadDatos = (size,mensaje) =>{\n    setSize(size)\n    setMensaje(mensaje)\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <br></br>\n        <div>{\n          size > 0 &&\n          <QrComponent size = {size} mensaje = {mensaje} ></QrComponent>\n          }\n        </div>\n        PMFOX TECHNOLOGIES\n        <FormularioComponent ReturnDatos = {ReadDatos}></FormularioComponent>\n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}